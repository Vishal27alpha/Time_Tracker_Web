{"ast":null,"code":"var _jsxFileName = \"/Users/vishal/Desktop/timelogger-master/timekeeper-frontend/src/components/remainderContainer/RemainderContainer.component.jsx\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './RemainderContainer.style.scss';\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AddedTask from '../addedTask/AddedTask.component';\nimport { addTask, addRemainder } from '../../redux/task/Task.action';\nimport { SecondsToArray } from '../../logic/arrayToSeconds';\nimport { GetTimeInSeconds } from '../../logic/getDate';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { GetDate } from '../../logic/getDate';\nimport { MuiPickersUtilsProvider, TimePicker } from '@material-ui/pickers';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst RemainderContainer = () => {\n  const {\n    taskList\n  } = useSelector(state => state.TaskReducer);\n  const {\n    key,\n    totalTime\n  } = useSelector(state => state.TotalTimeReducer);\n  const [remainderName, setRemainderName] = useState();\n  const [time, setTime] = useState();\n  const [repeat, setRepeat] = useState(false);\n  const dispatch = useDispatch(); //console.log(taskList)\n\n  const dispatchAddRemainder = () => {\n    dispatch(addRemainder(remainderName, time, repeat));\n    setRemainderName('');\n    setTime(undefined);\n    setRepeat(false);\n    document.getElementById('outlined-basic').blur();\n  };\n\n  let timeError = undefined;\n\n  const timeValidation = dateTime => {\n    setTime(Math.floor(new Date(dateTime).getTime() / 1000)); //console.log(((time-GetTimeInSeconds())/60))\n\n    if (time !== undefined) {\n      if ((time - GetTimeInSeconds()) / 60 < 0) {\n        timeError = true;\n        setTime(undefined);\n      }\n    }\n  }; //console.log((time-GetTimeInSeconds())/60)\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, totalTime[key] !== undefined && totalTime[key][GetDate()] ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"remainderMainContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"headingremainder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Remainder List\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addRemainderinpputContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addRemainderContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"remainderAddInputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: remainderName,\n    onChange: e => setRemainderName(e.target.value),\n    className: \"addRemainderText\",\n    id: \"outlined-basic\",\n    placeholder: \"Add Remainder\",\n    variant: \"outlined\",\n    color: \"primary\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TimePicker, {\n    className: \"timeSelector\",\n    value: time !== undefined ? new Date(time * 1000) : new Date(),\n    onChange: timeValidation,\n    ampm: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"minutesFromNowContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    inputProps: {\n      'aria-label': 'Checkbox Repeat'\n    },\n    style: {\n      'color': 'white'\n    },\n    color: \"primary\",\n    className: \"repeatSelectCheckBox\",\n    onChange: e => setRepeat(e.target.checked),\n    checked: repeat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"minutesFromNow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, \" \", `Repeat Every ${time !== undefined ? ((time - GetTimeInSeconds()) / 60).toFixed(1) : 0} Minutes From Now`), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"saveRemainderBtn\",\n    startIcon: /*#__PURE__*/React.createElement(CheckIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 36\n      }\n    }),\n    onClick: dispatchAddRemainder,\n    disabled: time === undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  })), time - GetTimeInSeconds() < 0 ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"timeError\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Please select a future time\") : '')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addedRemainderListContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, Object.keys(taskList).map(key => {\n    return taskList[key].type === 'remainder' ? /*#__PURE__*/React.createElement(AddedTask, {\n      key: key,\n      type: taskList[key].type,\n      completed: taskList[key].isCompleted,\n      bgColor: taskList[key].color,\n      taskName: key,\n      paused: taskList[key].paused,\n      percentage: taskList[key].percentage,\n      time: SecondsToArray(taskList[key].timeRemaining),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 26\n      }\n    }) : '';\n  }))) : '');\n};\n\nexport default RemainderContainer;","map":{"version":3,"sources":["/Users/vishal/Desktop/timelogger-master/timekeeper-frontend/src/components/remainderContainer/RemainderContainer.component.jsx"],"names":["React","useState","useSelector","useDispatch","Button","CheckIcon","AddedTask","addTask","addRemainder","SecondsToArray","GetTimeInSeconds","DateFnsUtils","GetDate","MuiPickersUtilsProvider","TimePicker","Checkbox","RemainderContainer","taskList","state","TaskReducer","key","totalTime","TotalTimeReducer","remainderName","setRemainderName","time","setTime","repeat","setRepeat","dispatch","dispatchAddRemainder","undefined","document","getElementById","blur","timeError","timeValidation","dateTime","Math","floor","Date","getTime","e","target","value","checked","toFixed","Object","keys","map","type","isCompleted","color","paused","percentage","timeRemaining"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport './RemainderContainer.style.scss'\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AddedTask from '../addedTask/AddedTask.component';\nimport {addTask,addRemainder} from '../../redux/task/Task.action';\nimport {SecondsToArray} from '../../logic/arrayToSeconds';\nimport {GetTimeInSeconds} from '../../logic/getDate';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {GetDate} from '../../logic/getDate';\n\n\nimport {\n  MuiPickersUtilsProvider,\n  TimePicker\n} from '@material-ui/pickers';\nimport Checkbox from'@material-ui/core/Checkbox';\nconst RemainderContainer=()=>{\n\n    const {taskList}=useSelector(state=>state.TaskReducer);\n    const {key,totalTime}=useSelector(state=>state.TotalTimeReducer);\n    const [remainderName,setRemainderName]=useState();\n    const [time,setTime]=useState();\n    const [repeat,setRepeat]=useState(false);\n    const dispatch=useDispatch();\n    //console.log(taskList)\n    \n    const dispatchAddRemainder=()=>{\n        dispatch(addRemainder(remainderName,time,repeat));\n        setRemainderName('');\n        setTime(undefined);\n        setRepeat(false)\n        document.getElementById('outlined-basic').blur();\n    }\n    let timeError=undefined; \n    const timeValidation=dateTime=>{\n        setTime(Math.floor(new Date(dateTime).getTime()/1000))\n        //console.log(((time-GetTimeInSeconds())/60))\n        if(time!==undefined){\n            if(((time-GetTimeInSeconds())/60)<0){\n                timeError=true;\n                setTime(undefined)\n            }\n        }\n\n    }   \n    //console.log((time-GetTimeInSeconds())/60)\n    return(\n        <React.Fragment>\n        {totalTime[key]!==undefined && totalTime[key][GetDate()]?\n        <div className='remainderMainContainer'>\n            <span className='headingremainder'>Remainder List</span>\n            <div className='addRemainderinpputContainer'>\n                <div className='addRemainderContainer'>\n                    <div className='remainderAddInputs'>\n                        <input value={remainderName} onChange={e=>setRemainderName(e.target.value)} className='addRemainderText' id=\"outlined-basic\" placeholder=\"Add Remainder\" variant=\"outlined\" color='primary' type='text'></input>\n                        <MuiPickersUtilsProvider  utils={DateFnsUtils}>\n\n                        <TimePicker\n                          \n                          className='timeSelector'\n                          value={time!==undefined?new Date(time*1000):new Date()}\n                          onChange={timeValidation}\n                          ampm={false}\n                        />\n                        \n                         </MuiPickersUtilsProvider>\n                        \n                        </div>\n                    <div className='minutesFromNowContainer'>\n                        <Checkbox\n                        inputProps={{ 'aria-label': 'Checkbox Repeat' }}\n                        style={{'color':'white'}}\n                        color=\"primary\"\n                        className='repeatSelectCheckBox'\n                        onChange={e=>setRepeat(e.target.checked)}\n                        checked={repeat}\n                        />\n                        <span className='minutesFromNow'> {`Repeat Every ${time!==undefined?((time-GetTimeInSeconds())/60).toFixed(1):0} Minutes From Now`}</span>\n                        <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className='saveRemainderBtn'\n                        startIcon={<CheckIcon />}\n                        onClick={dispatchAddRemainder}\n                        disabled={time===undefined}\n                        ></Button>\n                    </div>\n                    {(time-GetTimeInSeconds())<0?\n                        <span className='timeError'>Please select a future time</span>\n                        :\n                        ''\n                    }\n                    \n                    \n                </div>\n            </div>\n            <div className='addedRemainderListContainer'>\n\n                {Object.keys(taskList).map((key)=>\n                    {   return(\n                        taskList[key].type==='remainder'?\n                        (<AddedTask key={key} type={taskList[key].type} completed={taskList[key].isCompleted} bgColor={taskList[key].color} taskName={key} paused={taskList[key].paused} percentage={taskList[key].percentage} time={SecondsToArray(taskList[key].timeRemaining)}/>)\n                        :''\n                        )\n                    }    \n                    )\n                }          \n            </div>\n\n        </div>\n        :''}\n        </React.Fragment>\n    )\n}\nexport default RemainderContainer;"]},"metadata":{},"sourceType":"module"}