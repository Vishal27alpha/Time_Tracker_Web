{"ast":null,"code":"var _jsxFileName = \"/Users/vishal/Desktop/timelogger-master/timekeeper-frontend/src/components/timeComparisonBarChart/timeComparisonBarChart.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Bar } from 'react-chartjs-2';\nimport './timeComparisonBarChart.style.scss';\n\nconst TimeComparisonBarChart = () => {\n  const {\n    key,\n    data\n  } = useSelector(state => state.SubmitDataReducer); //onst TotalTimeReducer=useSelector(state=>state.TotalTimeReducer);\n\n  let Doughnutdata = {};\n  let display = false;\n\n  if (Object.keys(data).length > 0 && Object.keys(data[key]).length > 0) {\n    let chartLabels = [];\n    let taskHour = [];\n    let bgColors = [];\n    let borderColors = [];\n\n    if (Object.keys(data).length > 0) {\n      let obj = data[key].taskData; //console.log(obj)\n\n      for (var k in obj) {\n        chartLabels.push(k.toUpperCase());\n        taskHour.push((obj[k].time / 3600).toFixed(3));\n        bgColors.push(obj[k].color);\n        borderColors.push('rgb(255,255,255)');\n      }\n    }\n\n    chartLabels.push('Estimated Total Time');\n    let TotalTimeReducer = data[key].totalTimeData;\n    let originalTimeKey = Object.keys(TotalTimeReducer.originalTime[TotalTimeReducer.key])[0];\n    taskHour.push((TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey] / 3600).toFixed(3));\n    bgColors.push('rgb(28,16,133)');\n    borderColors.push('rgb(255,255,255)');\n    let actualTime = 0;\n\n    if (TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey] < 0) {\n      actualTime = -1 * TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey] + TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey];\n    } else {\n      actualTime = TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey] - TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey];\n    }\n\n    chartLabels.push('Actual Total Time');\n    taskHour.push((actualTime / 3600).toFixed(3));\n    bgColors.push('rgb(222, 11, 39)');\n    borderColors.push('rgb(255,255,255)');\n    Doughnutdata = {\n      labels: chartLabels,\n      datasets: [{\n        label: 'Time Comparison Chart',\n        data: taskHour,\n        backgroundColor: bgColors,\n        borderColor: borderColors,\n        borderWidth: 5,\n        hoverOffset: 20\n      }]\n    };\n    display = true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `timeConparisonBarChartContainer-${display ? '' : 'hideBarChartContainer'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, Object.keys(data).length > 0 && Object.keys(data[key]).length > 0 ? /*#__PURE__*/React.createElement(Bar, {\n    data: Doughnutdata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }) : '');\n};\n\nexport default TimeComparisonBarChart;","map":{"version":3,"sources":["/Users/vishal/Desktop/timelogger-master/timekeeper-frontend/src/components/timeComparisonBarChart/timeComparisonBarChart.js"],"names":["React","useSelector","Bar","TimeComparisonBarChart","key","data","state","SubmitDataReducer","Doughnutdata","display","Object","keys","length","chartLabels","taskHour","bgColors","borderColors","obj","taskData","k","push","toUpperCase","time","toFixed","color","TotalTimeReducer","totalTimeData","originalTimeKey","originalTime","actualTime","totalTime","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverOffset"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Bar} from 'react-chartjs-2';\nimport './timeComparisonBarChart.style.scss'\nconst TimeComparisonBarChart=()=>{\n    const {key,data}=useSelector(state=>state.SubmitDataReducer);\n    //onst TotalTimeReducer=useSelector(state=>state.TotalTimeReducer);\n    let Doughnutdata={}\n    let display=false;\n    if(Object.keys(data).length>0 && Object.keys(data[key]).length>0) {\n      let chartLabels=[];\n      let taskHour=[];\n      let bgColors=[]\n      let borderColors=[]\n      if(Object.keys(data).length>0){\n      let obj=data[key].taskData;\n      //console.log(obj)\n      for(var k in obj){\n          chartLabels.push(k.toUpperCase());\n          \n          taskHour.push(((obj[k].time)/3600).toFixed(3))\n          bgColors.push(obj[k].color)\n          borderColors.push('rgb(255,255,255)')\n          }\n      }\n    chartLabels.push('Estimated Total Time');\n    let TotalTimeReducer=data[key].totalTimeData\n    let originalTimeKey=Object.keys(TotalTimeReducer.originalTime[TotalTimeReducer.key])[0];\n    taskHour.push((TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey]/3600).toFixed(3));\n    bgColors.push('rgb(28,16,133)');\n    borderColors.push('rgb(255,255,255)');\n    let actualTime=0;\n    if(TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey]<0){\n          actualTime=(-1*TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey])+TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey]\n    }\n    else{\n        actualTime=TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey]-TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey];\n    }\n    chartLabels.push('Actual Total Time');\n    taskHour.push((actualTime/3600).toFixed(3));\n    bgColors.push('rgb(222, 11, 39)');\n    borderColors.push('rgb(255,255,255)');\n      Doughnutdata = {\n          labels: chartLabels,\n          datasets: [\n            {\n              label: 'Time Comparison Chart',\n              data: taskHour,\n              backgroundColor: bgColors,\n              borderColor: borderColors,\n              borderWidth: 5,\n              hoverOffset: 20\n            },\n          ],\n        };\n      display=true\n    }\n    return(\n        <div className={`timeConparisonBarChartContainer-${display?'':'hideBarChartContainer'}`}>\n            {Object.keys(data).length>0 && Object.keys(data[key]).length>0?\n            <Bar data={Doughnutdata}/>\n            :''}\n        </div>\n    )\n}\n\nexport default TimeComparisonBarChart;\n"]},"metadata":{},"sourceType":"module"}