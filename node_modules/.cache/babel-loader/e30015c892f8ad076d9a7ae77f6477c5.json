{"ast":null,"code":"import { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveTotalTime, updateCountDown } from '../redux/totalTime/TotalTime.action';\nimport { ArrayToSeconds, SecondsToArray } from '../logic/arrayToSeconds';\n\nconst getFullDate = () => {\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n  return date.toString() + month.toString() + year.toString();\n};\n\nexport const useTimerHooks = () => {\n  const dispatch = useDispatch();\n  const {\n    key,\n    totalTime,\n    countDownProgress\n  } = useSelector(state => state.TotalTimeReducer);\n  const {\n    taskList\n  } = useSelector(state => state.TaskReducer);\n  const [timeState, setTimeState] = useState([]);\n  let timeArr = [];\n  useEffect(() => {\n    validatePrevValue();\n    const interval = setInterval(() => {\n      if (timeState.length > 0) {\n        dispatch(updateCountDown());\n        validatePrevValue();\n        setTimeState(timeArr);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [...timeState, countDownProgress]);\n\n  const validatePrevValue = () => {\n    if (totalTime[key] !== undefined && totalTime[key][getFullDate()] !== undefined) {\n      timeArr = SecondsToArray(totalTime[key][getFullDate()]);\n      setTimeState(timeArr);\n    }\n  };\n\n  const handleChange = useCallback(event => {\n    validatePrevValue(); //timeArr.push(event.target.value)\n\n    if (!isNaN(event.target.value)) {\n      timeArr[parseInt(event.target.name)] = event.target.value;\n\n      if (parseInt(event.target.name) < 5) {\n        document.getElementById(parseInt(event.target.name) + 1).disabled = false;\n        document.getElementById(parseInt(event.target.name) + 1).focus();\n        document.getElementById(parseInt(event.target.name) + 1).value = '';\n\n        if (parseInt(event.target.name) !== 0) {\n          document.getElementById(parseInt(event.target.name)).disabled = true;\n        }\n      } else {\n        document.getElementById(parseInt(event.target.name)).blur();\n        document.getElementById(parseInt(event.target.name)).disabled = true;\n      }\n    } else {\n      document.getElementById(parseInt(event.target.name)).value = '';\n    }\n  }, []);\n  const clearTxt = useCallback(event => {\n    if (event.target.name !== 'submitButton') {\n      document.getElementById(parseInt(event.target.name)).value = '';\n    }\n  }, []);\n  const submitTime = useCallback(() => {\n    if (timeArr.length >= 6) {\n      setTimeState(timeArr);\n      const totalSeconds = ArrayToSeconds(timeArr); //console.log(totalSeconds)\n\n      dispatch(saveTotalTime(totalSeconds));\n    } else {\n      console.log(\"time is blank\");\n    }\n  }, []);\n  const cls = useMemo(() => {\n    return timeState.length > 6 ? 'timeBox-negative' : 'timeBox';\n  }, [timeState.length > 6]);\n\n  const displayCondition = () => {\n    return timeState.length > 0 && Object.keys(taskList).length > 0 ? 'true' : 'false';\n  };\n\n  const handleDelete = useCallback(event => {\n    const pressedKey = event.key;\n\n    if (pressedKey === 'Backspace' || pressedKey === 'Delete') {\n      timeArr.pop();\n\n      if (parseInt(event.target.name) <= 5) {\n        if (parseInt(event.target.name) < 1) {\n          return false;\n        }\n\n        document.getElementById(parseInt(event.target.name) - 1).disabled = false;\n        document.getElementById(parseInt(event.target.name) - 1).focus();\n        document.getElementById(parseInt(event.target.name) - 1).value = '';\n      }\n    }\n  }, []);\n  const timeBoxes = useMemo(() => {\n    return [{\n      id: 0,\n      placeholder: 'H'\n    }, {\n      id: 1,\n      placeholder: 'H'\n    }, {\n      id: 2,\n      placeholder: 'M'\n    }, {\n      id: 3,\n      placeholder: 'M'\n    }, {\n      id: 4,\n      placeholder: 'S'\n    }, {\n      id: 5,\n      placeholder: 'S'\n    }];\n  }, []);\n  return [handleChange, clearTxt, handleDelete, timeState, timeBoxes, cls, displayCondition, timeArr, totalTime, key, submitTime];\n};","map":{"version":3,"sources":["/Users/vishal/Desktop/timelogger-master/timekeeper-frontend/src/customHooks/useTimerHooks.js"],"names":["useState","useEffect","useCallback","useMemo","useDispatch","useSelector","saveTotalTime","updateCountDown","ArrayToSeconds","SecondsToArray","getFullDate","newDate","Date","date","getDate","month","getMonth","year","getFullYear","toString","useTimerHooks","dispatch","key","totalTime","countDownProgress","state","TotalTimeReducer","taskList","TaskReducer","timeState","setTimeState","timeArr","validatePrevValue","interval","setInterval","length","clearInterval","undefined","handleChange","event","isNaN","target","value","parseInt","name","document","getElementById","disabled","focus","blur","clearTxt","submitTime","totalSeconds","console","log","cls","displayCondition","Object","keys","handleDelete","pressedKey","pop","timeBoxes","id","placeholder"],"mappings":"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","sourcesContent":["import {useState,useEffect, useCallback,useMemo} from 'react';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {saveTotalTime,updateCountDown} from '../redux/totalTime/TotalTime.action'\nimport {ArrayToSeconds,SecondsToArray} from '../logic/arrayToSeconds';\n\n\nconst getFullDate=()=>{\n    let newDate=new Date()\n        let date = newDate.getDate();\n        let month = newDate.getMonth() + 1;\n        let year = newDate.getFullYear();\n        return(date.toString()+month.toString()+year.toString());\n}\nexport const useTimerHooks=()=>{\n    const dispatch=useDispatch();\n    const {key,totalTime,countDownProgress}=useSelector(state=>state.TotalTimeReducer);\n    const {taskList}=useSelector(state=>state.TaskReducer);\n    const [timeState,setTimeState]=useState([]);\n\n    let timeArr=[]\n  \n    useEffect(() => {\n        validatePrevValue();\n        \n        const interval = setInterval(() => {\n            if(timeState.length>0){\n               dispatch(updateCountDown());\n                validatePrevValue();\n                setTimeState(timeArr)\n                \n            }\n        }, 1000);\n        return () => clearInterval(interval);\n      }, [...timeState,countDownProgress]);\n\n    const validatePrevValue=()=>{\n        \n        if((totalTime[key]!==undefined)&&(totalTime[key][getFullDate()]!==undefined)){\n            timeArr=SecondsToArray(totalTime[key][getFullDate()]);\n            setTimeState(timeArr)\n        }\n       \n    }\n    const handleChange=useCallback((event)=>{\n            \n            validatePrevValue();\n            //timeArr.push(event.target.value)\n            if(!isNaN(event.target.value)){\n            timeArr[parseInt(event.target.name)]=event.target.value\n                if(parseInt(event.target.name)<5){\n                    document.getElementById(parseInt(event.target.name)+1).disabled=false;\n                    document.getElementById(parseInt(event.target.name)+1).focus();\n                    document.getElementById(parseInt(event.target.name)+1).value='';\n                    if(parseInt(event.target.name)!==0){\n                    document.getElementById(parseInt(event.target.name)).disabled=true;\n                    }\n                }\n                else{\n                    document.getElementById(parseInt(event.target.name)).blur();\n                    document.getElementById(parseInt(event.target.name)).disabled=true;\n                }\n            }\n            else{document.getElementById(parseInt(event.target.name)).value='';}\n\n    },[])\n    \n    const clearTxt=useCallback((event)=>{   \n        if(event.target.name!=='submitButton'){\n            document.getElementById(parseInt(event.target.name)).value='';\n        }\n    },[])\n\n   \n    const submitTime=useCallback(()=>{\n        if(timeArr.length>=6){\n            setTimeState(timeArr)\n            const totalSeconds=ArrayToSeconds(timeArr);\n            //console.log(totalSeconds)\n            dispatch(saveTotalTime(totalSeconds))\n        }\n        else{\n            console.log(\"time is blank\");\n        }\n    },[])\n\n \n    const cls=useMemo(()=>{\n        return timeState.length>6?'timeBox-negative':'timeBox'\n    },[timeState.length>6])\n   \n    const displayCondition=()=>{\n        return (timeState.length>0 && Object.keys(taskList).length>0)?'true':'false'\n    }\n    \n    const handleDelete=useCallback((event)=>{\n        const pressedKey=event.key;\n        if (pressedKey==='Backspace' || pressedKey==='Delete'){\n            timeArr.pop();\n            \n                if(parseInt(event.target.name)<=5){\n                    if(parseInt(event.target.name)<1){\n                        return false\n                    }\n                    document.getElementById(parseInt(event.target.name)-1).disabled=false;\n                    document.getElementById(parseInt(event.target.name)-1).focus();\n                    document.getElementById(parseInt(event.target.name)-1).value='';\n                }\n        }\n    },[])\n\n    const timeBoxes=useMemo(()=>{ return [\n        {\n            id:0,\n            placeholder:'H',\n        },\n        {\n            id:1,\n            placeholder:'H',\n        },\n        {\n            id:2,\n            placeholder:'M',\n        },\n        {\n            id:3,\n            placeholder:'M',\n        },\n        {\n            id:4,\n            placeholder:'S',\n        },\n        {\n            id:5,\n            placeholder:'S',\n        },\n    ]},[])\n\n    return [handleChange,clearTxt,handleDelete,timeState,timeBoxes,cls,displayCondition,timeArr,totalTime,key,submitTime]\n}"]},"metadata":{},"sourceType":"module"}