{"ast":null,"code":"import NotesType from \"./notes.type\";\nconst INITIAL_STATE = {\n  noteKey: 0,\n  notes: {},\n  noteDisplay: false\n};\nexport const NoteReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case NotesType.TOGGLE_NOTE_DISPLAY:\n      return { ...state,\n        noteDisplay: !state.noteDisplay\n      };\n\n    case NotesType.ADD_NOTE:\n      state.notes[state.noteKey] = action.noteText;\n      return { ...state,\n        noteKey: state.noteKey + 1,\n        notes: { ...state.notes\n        }\n      };\n\n    case NotesType.REMOVE_NOTE:\n      delete state.notes[action.noteId];\n      return { ...state,\n        notes: { ...state.notes\n        }\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/vishal/Desktop/timelogger-master/timekeeper-frontend/src/redux/notes/notes.reducer.js"],"names":["NotesType","INITIAL_STATE","noteKey","notes","noteDisplay","NoteReducer","state","action","type","TOGGLE_NOTE_DISPLAY","ADD_NOTE","noteText","REMOVE_NOTE","noteId"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AAEA,MAAMC,aAAa,GAAC;AAChBC,EAAAA,OAAO,EAAC,CADQ;AAEhBC,EAAAA,KAAK,EAAC,EAFU;AAGhBC,EAAAA,WAAW,EAAC;AAHI,CAApB;AAKA,OAAO,MAAMC,WAAW,GAAC,CAACC,KAAK,GAACL,aAAP,EAAqBM,MAArB,KAA8B;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,SAAS,CAACS,mBAAf;AACI,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,WAAW,EAAC,CAAEE,KAAK,CAACF;AAFlB,OAAN;;AAIJ,SAAKJ,SAAS,CAACU,QAAf;AACIJ,MAAAA,KAAK,CAACH,KAAN,CAAYG,KAAK,CAACJ,OAAlB,IAA2BK,MAAM,CAACI,QAAlC;AACA,aAAM,EACF,GAAGL,KADD;AAEFJ,QAAAA,OAAO,EAACI,KAAK,CAACJ,OAAN,GAAc,CAFpB;AAGFC,QAAAA,KAAK,EAAC,EAAC,GAAGG,KAAK,CAACH;AAAV;AAHJ,OAAN;;AAKJ,SAAKH,SAAS,CAACY,WAAf;AACI,aAAON,KAAK,CAACH,KAAN,CAAYI,MAAM,CAACM,MAAnB,CAAP;AACA,aAAM,EACF,GAAGP,KADD;AAEFH,QAAAA,KAAK,EAAC,EAAC,GAAGG,KAAK,CAACH;AAAV;AAFJ,OAAN;;AAIJ;AACI,aAAOG,KAAP;AApBR;AAuBH,CAxBM","sourcesContent":["import NotesType from \"./notes.type\";\n\nconst INITIAL_STATE={\n    noteKey:0,\n    notes:{},\n    noteDisplay:false,\n}\nexport const NoteReducer=(state=INITIAL_STATE,action)=>{\n    switch(action.type){\n        case NotesType.TOGGLE_NOTE_DISPLAY:\n            return{\n                ...state,\n                noteDisplay:!(state.noteDisplay)\n            }\n        case NotesType.ADD_NOTE:\n            state.notes[state.noteKey]=action.noteText\n            return{\n                ...state,\n                noteKey:state.noteKey+1,\n                notes:{...state.notes}\n            }\n        case NotesType.REMOVE_NOTE:\n            delete state.notes[action.noteId]\n            return{\n                ...state,\n                notes:{...state.notes}\n            }\n        default:\n            return state;\n\n    }\n}"]},"metadata":{},"sourceType":"module"}