{"ast":null,"code":"var _jsxFileName = \"/Users/vishal/Desktop/timelogger-master/timekeeper-frontend/src/components/addedTask/AddedTask.component.jsx\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { removeTask, pauseTask, startTask, completeTask } from '../../redux/task/Task.action';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst AddedTask = ({\n  completed,\n  bgColor,\n  taskName,\n  paused,\n  percentage,\n  type,\n  time\n}) => {\n  //console.log(taskName+' '+paused)\n  const dispatch = useDispatch();\n  let backgrouColorForStart = \"#e0e0de\";\n\n  if (paused === false) {\n    backgrouColorForStart = \"#c1edb4\";\n  }\n\n  const containerStyle = {\n    position: 'relative',\n    height: '15%',\n    width: '100%',\n    backgroundColor: backgrouColorForStart,\n    borderRadius: '10px',\n    'margin-top': 5,\n    display: 'flex'\n  };\n  const fillerStyle = {\n    height: '100%',\n    width: `${percentage}%`,\n    backgroundColor: `${bgColor}`,\n    textAlign: 'right',\n    borderRadius: '5px',\n    transition: 'width 1s ease-in-out'\n  };\n  const labelStyle = {\n    position: 'absolute',\n    top: '1vh',\n    left: '-3vw',\n    color: 'black',\n    fontWeight: 'bold',\n    'z-index': -1,\n    width: '10vw'\n  };\n  const taskContentStyle = {\n    position: 'absolute',\n    display: 'flex',\n    right: '50%',\n    top: '10%',\n    textAlign: 'right',\n    'font-weight': 'bold'\n  };\n  const iconsListStyle = {\n    position: 'absolute',\n    top: '0.5vh',\n    display: 'flex',\n    left: '1vw',\n    'padding-left': '7.5vw',\n    textAlign: 'right'\n  };\n  const taskNameStyle = {\n    position: 'absolute',\n    top: '1vh',\n    color: 'black',\n    right: '1.9vw',\n    'text-align': 'left',\n    width: '11vw',\n    'margin-left': '10%'\n  };\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    title: taskName.toUpperCase(),\n    placement: \"right-start\",\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"taskMainContainer\",\n    style: containerStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contentContainer\",\n    style: fillerStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"taskContent\",\n    style: taskContentStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: labelStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, `${time[0] + '' + time[1] + ':' + time[2] + '' + time[3] + ':' + time[4] + '' + time[5]}  -  ${percentage}%`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"taskName\",\n    style: taskNameStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, `${taskName.toUpperCase().slice(0, 14)}${taskName.length > 14 ? '...' : ''}`), completed && type !== 'remainder' ? '' : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"iconsList\",\n    style: iconsListStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, paused ? type !== 'remainder' ? /*#__PURE__*/React.createElement(Tooltip, {\n    title: `Start ${taskName.toUpperCase()}`,\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(PlayCircleOutlineIcon, {\n    key: `${taskName}-playBtn`,\n    onClick: () => dispatch(startTask(taskName)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 41\n    }\n  }))) : '' : type !== 'remainder' ? /*#__PURE__*/React.createElement(Tooltip, {\n    title: `Pause ${taskName.toUpperCase()}`,\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(PauseCircleOutlineIcon, {\n    key: `${taskName}-pauseBtn`,\n    onClick: () => dispatch(pauseTask(taskName)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 41\n    }\n  }))) : '', type !== 'task' ? '' : /*#__PURE__*/React.createElement(Tooltip, {\n    title: `Mark Complete ${taskName.toUpperCase()}`,\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"completedButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(DoneOutlineIcon, {\n    onClick: () => dispatch(completeTask(taskName)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }))), type === 'break' ? '' : percentage > 0 && type !== 'remainder' ? '' : /*#__PURE__*/React.createElement(Tooltip, {\n    title: `Remove ${taskName.toUpperCase()}`,\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"removeButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CancelIcon, {\n    key: `${taskName}-cancelBtn`,\n    onClick: () => dispatch(removeTask(taskName)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  })))))));\n};\n\nexport default React.memo(AddedTask);","map":{"version":3,"sources":["/Users/vishal/Desktop/timelogger-master/timekeeper-frontend/src/components/addedTask/AddedTask.component.jsx"],"names":["React","useDispatch","removeTask","pauseTask","startTask","completeTask","PlayCircleOutlineIcon","PauseCircleOutlineIcon","DoneOutlineIcon","CancelIcon","Tooltip","AddedTask","completed","bgColor","taskName","paused","percentage","type","time","dispatch","backgrouColorForStart","containerStyle","position","height","width","backgroundColor","borderRadius","display","fillerStyle","textAlign","transition","labelStyle","top","left","color","fontWeight","taskContentStyle","right","iconsListStyle","taskNameStyle","toUpperCase","slice","length","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {removeTask,pauseTask,startTask,completeTask} from '../../redux/task/Task.action'\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Tooltip from '@material-ui/core/Tooltip';\nconst AddedTask=({completed,bgColor,taskName,paused,percentage,type,time})=>{\n    //console.log(taskName+' '+paused)\n    const dispatch=useDispatch();\n    let backgrouColorForStart=\"#e0e0de\";\n    if(paused===false){\n        backgrouColorForStart=\"#c1edb4\";\n    }\n    const containerStyle={\n        position:'relative',\n        height:'15%',\n        width:'100%',\n        backgroundColor: backgrouColorForStart,\n        borderRadius: '10px',\n        'margin-top':5,\n        display:'flex',\n    }\n\n    const fillerStyle = {\n        height: '100%',\n        width: `${percentage}%`,\n        backgroundColor: `${bgColor}`,\n        textAlign: 'right',\n        borderRadius: '5px',\n        transition: 'width 1s ease-in-out',\n      }\n\n      const labelStyle = {\n        position:'absolute',\n        top:'1vh',\n        left:'-3vw',\n        color: 'black',\n        fontWeight: 'bold',\n        'z-index':-1,\n        width:'10vw',\n        \n      }\n\n      const taskContentStyle={\n        position:'absolute',\n        display:'flex',\n        right:'50%',\n        top:'10%',\n        textAlign:'right',\n\n        'font-weight':'bold',\n      }\n      const iconsListStyle={\n        position:'absolute',\n        top:'0.5vh',\n        display:'flex',\n        left:'1vw',\n        'padding-left':'7.5vw',\n        textAlign: 'right'\n      }\n      const taskNameStyle={\n          position:'absolute',\n          top:'1vh',\n          color:'black',\n          right:'1.9vw',\n          'text-align':'left',\n          width:'11vw',\n          'margin-left':'10%',\n      }\n      \n\n    return(\n        <Tooltip title={taskName.toUpperCase()} placement=\"right-start\" arrow>\n        <div className='taskMainContainer' style={containerStyle}>\n            <div className='contentContainer' style={fillerStyle}>\n               \n            </div>\n            <div className='taskContent' style={taskContentStyle}>\n                <span style={labelStyle}>{`${time[0]+''+time[1]+':'+time[2]+''+time[3]+':'+time[4]+''+time[5]}  -  ${percentage}%`}</span>\n                <div className='taskName' style={taskNameStyle}>\n                    {`${taskName.toUpperCase().slice(0,14)}${taskName.length>14?'...':''}`}\n                </div>\n                {completed && type!=='remainder'?'':\n            \n                \n                <div className='iconsList' style={iconsListStyle}>\n                    {paused\n                        ?\n                            type!=='remainder'\n                            ?\n                                <Tooltip title={`Start ${taskName.toUpperCase()}`}  arrow>\n                                    <div className='playButton'>\n                                        <PlayCircleOutlineIcon key={`${taskName}-playBtn`} onClick={()=>dispatch(startTask(taskName))}/>\n                                    </div>\n                                </Tooltip>\n                            :''\n                            :type!=='remainder'\n                            ?\n                                <Tooltip title={`Pause ${taskName.toUpperCase()}`}  arrow>\n                                    <div className='playButton'>\n                                        <PauseCircleOutlineIcon key={`${taskName}-pauseBtn`} onClick={()=>dispatch(pauseTask(taskName))}/>\n                                    </div>\n                                </Tooltip>\n                            :''\n                    }\n                    \n                    {type!=='task'?'':\n                        <Tooltip title={`Mark Complete ${taskName.toUpperCase()}`}  arrow>\n                            <div className='completedButton'>\n                                <DoneOutlineIcon onClick={()=>dispatch(completeTask(taskName))}/>\n                            </div>\n                        </Tooltip>\n                    }\n                    {type==='break'?'':percentage>0 && type!=='remainder'?'':\n                        <Tooltip title={`Remove ${taskName.toUpperCase()}`}  arrow>\n                            <div className='removeButton'>\n                                <CancelIcon key={`${taskName}-cancelBtn`} onClick={()=>dispatch(removeTask(taskName))}/>\n                            </div>\n                        </Tooltip>\n                        \n                    }\n                    \n                     \n                </div>\n                }\n            </div>\n        </div>\n        </Tooltip>\n    )\n}\n\nexport default React.memo(AddedTask);"]},"metadata":{},"sourceType":"module"}