{"ast":null,"code":"var _jsxFileName = \"/Users/vishal/Desktop/timelogger-master/timekeeper-frontend/src/components/timeTrackLineChart/TimeTrackLineChart.component.jsx\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Line } from 'react-chartjs-2';\nimport './TimeTrackLineChart.style.scss';\n\nconst TimeTrackerLineChart = () => {\n  const {\n    key,\n    data\n  } = useSelector(state => state.SubmitDataReducer);\n  let dataLine = null; //onst TotalTimeReducer=useSelector(state=>state.TotalTimeReducer);\n\n  let display = false;\n\n  if (Object.keys(data).length > 0 && Object.keys(data[key]).length > 0) {\n    let xAxis = []; //console.log(data[key]);\n    //console.log(Object.keys(data[key]).length)\n\n    let dataSet = [];\n    var originalTimeData = {\n      label: 'Estimated Time',\n      data: [],\n      fill: false,\n      borderColor: 'rgb(93, 66, 245)',\n      tension: 0.1\n    };\n    var TotalTimeData = {\n      label: 'Actual Time',\n      data: [],\n      fill: false,\n      borderColor: 'rgb(245, 5, 25)',\n      tension: 0.1\n    };\n\n    if (Object.keys(data).length > 0) {\n      for (var k in data) {\n        xAxis.push(data[k].date);\n        var keyLocal = data[k].totalTimeData.key;\n\n        for (var origTimeKey in data[k]['totalTimeData'].originalTime[keyLocal]) {\n          originalTimeData.data.push((data[k].totalTimeData.originalTime[keyLocal][origTimeKey] / 3600).toFixed(3));\n        }\n\n        for (var totalTimeKey in data[k].totalTimeData.totalTime[keyLocal]) {\n          //console.log(data[k].totalTimeData.totalTime[keyLocal][totalTimeKey])\n          var actualTime = 0;\n\n          if (data[k].totalTimeData.totalTime[keyLocal][totalTimeKey] < 0) {\n            actualTime = -1 * data[k].totalTimeData.totalTime[keyLocal][totalTimeKey] + data[k].totalTimeData.originalTime[keyLocal][totalTimeKey];\n          } else {\n            actualTime = data[k].totalTimeData.originalTime[keyLocal][totalTimeKey] - data[k].totalTimeData.totalTime[keyLocal][totalTimeKey];\n          }\n\n          TotalTimeData.data.push((actualTime / 3600).toFixed(3));\n        }\n      }\n\n      dataSet = [originalTimeData, TotalTimeData]; //console.log(dataSet)\n\n      display = true;\n    }\n\n    const labels = xAxis;\n    dataLine = {\n      labels: labels,\n      datasets: dataSet\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `timeConparisonBarLineContainer-${display ? '' : 'hidelineChartContainer'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, Object.keys(data).length > 0 && Object.keys(data[key]).length > 0 ? /*#__PURE__*/React.createElement(Line, {\n    className: \"lineChart\",\n    data: dataLine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }) : '');\n};\n\nexport default TimeTrackerLineChart;","map":{"version":3,"sources":["/Users/vishal/Desktop/timelogger-master/timekeeper-frontend/src/components/timeTrackLineChart/TimeTrackLineChart.component.jsx"],"names":["React","useSelector","Line","TimeTrackerLineChart","key","data","state","SubmitDataReducer","dataLine","display","Object","keys","length","xAxis","dataSet","originalTimeData","label","fill","borderColor","tension","TotalTimeData","k","push","date","keyLocal","totalTimeData","origTimeKey","originalTime","toFixed","totalTimeKey","totalTime","actualTime","labels","datasets"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Line} from 'react-chartjs-2';\nimport './TimeTrackLineChart.style.scss' \n\nconst TimeTrackerLineChart=()=>{\n    const {key,data}=useSelector(state=>state.SubmitDataReducer);\n    let dataLine=null;\n    //onst TotalTimeReducer=useSelector(state=>state.TotalTimeReducer);\n    let display=false;\n    if(Object.keys(data).length>0 && Object.keys(data[key]).length>0) {      \n      let xAxis=[];\n      //console.log(data[key]);\n      //console.log(Object.keys(data[key]).length)\n      let dataSet=[];\n      var originalTimeData={\n          label:'Estimated Time',\n          data:[],\n          fill:false,\n          borderColor:'rgb(93, 66, 245)',\n          tension:0.1\n      }\n      var TotalTimeData={\n        label:'Actual Time',\n        data:[],\n        fill:false,\n        borderColor:'rgb(245, 5, 25)',\n        tension:0.1\n    }\n      if(Object.keys(data).length>0){\n      \n      for(var k in data){\n          \n          xAxis.push(data[k].date)\n          \n          var keyLocal=data[k].totalTimeData.key\n         \n           for(var origTimeKey in data[k]['totalTimeData'].originalTime[keyLocal]){\n             originalTimeData.data.push((data[k].totalTimeData.originalTime[keyLocal][origTimeKey]/3600).toFixed(3))\n           }\n           for(var totalTimeKey in data[k].totalTimeData.totalTime[keyLocal]){\n                //console.log(data[k].totalTimeData.totalTime[keyLocal][totalTimeKey])\n               var actualTime=0;\n             if(data[k].totalTimeData.totalTime[keyLocal][totalTimeKey]<0){\n                 actualTime=(-1*data[k].totalTimeData.totalTime[keyLocal][totalTimeKey])+data[k].totalTimeData.originalTime[keyLocal][totalTimeKey]\n             }\n              else{\n              actualTime=data[k].totalTimeData.originalTime[keyLocal][totalTimeKey]-data[k].totalTimeData.totalTime[keyLocal][totalTimeKey]\n              }\n             TotalTimeData.data.push((actualTime/3600).toFixed(3))\n           }\n       }\n      dataSet=[originalTimeData,TotalTimeData]\n      //console.log(dataSet)\n   \n      display=true\n    }\n    const labels=xAxis;\n    dataLine = {\n      labels: labels,\n      datasets: dataSet\n    };\n\n  }\n    return(\n        <div className={`timeConparisonBarLineContainer-${display?'':'hidelineChartContainer'}`}>\n            {Object.keys(data).length>0 && Object.keys(data[key]).length>0?\n            <Line className='lineChart' data={dataLine}/>\n            :''}\n        </div>\n    )\n}\n\nexport default TimeTrackerLineChart;\n"]},"metadata":{},"sourceType":"module"}